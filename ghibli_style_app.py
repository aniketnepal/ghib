# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yi8jiQrQdajywYtrC9a7brJBjKpFXRAT
"""

streamlit run ghibli_style_app.py

import streamlit as st
from PIL import Image
import torch
from torchvision import transforms
from torchvision.models import vgg19
import torchvision.utils as vutils
import requests
from io import BytesIO

# Load a simulated "Ghibli-style" image as style image
STYLE_IMAGE_URL = "https://imgur.com/a/6nXJrqa"  # Replace with actual Ghibli style painting if needed

@st.cache_resource
def load_style_image():
    response = requests.get(STYLE_IMAGE_URL)
    img = Image.open(BytesIO(response.content)).convert("RGB")
    return img

# Image preprocessing and postprocessing
def preprocess(img):
    transform = transforms.Compose([
        transforms.Resize((512, 512)),
        transforms.ToTensor(),
        transforms.Lambda(lambda x: x.mul(255))
    ])
    return transform(img).unsqueeze(0)

def deprocess(tensor):
    tensor = tensor.squeeze().clamp(0, 255).div(255).cpu().detach()
    return transforms.ToPILImage()(tensor)

# Simulated style transfer function (demo only)
def apply_style_transfer(content_img, style_img):
    # Simulate with alpha blend for demo
    content = content_img.resize((512, 512))
    style = style_img.resize((512, 512))
    blended = Image.blend(content, style, alpha=0.4)
    return blended

# Streamlit UI
st.set_page_config(page_title="Ghibli Style Transfer", layout="centered")

st.title("ðŸŽ¨ Ghibli Style Photo Generator")
st.markdown("Upload a photo and convert it into a dreamy Studio Ghibli-style painting!")

uploaded_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    content_image = Image.open(uploaded_file).convert("RGB")
    st.image(content_image, caption="Original Image", use_column_width=True)

    style_image = load_style_image()

    with st.spinner("Generating Ghibli-style image..."):
        output_image = apply_style_transfer(content_image, style_image)
        st.success("Done!")

    st.image(output_image, caption="Ghibli Style Output", use_column_width=True)
    st.download_button("ðŸ“¥ Download Ghibli Image", data=output_image.tobytes(),
                       file_name="ghibli_style_output.jpg", mime="image/jpeg")

else:
    st.info("ðŸ‘† Please upload an image to get started.")
